{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/main/services/navigation-notification.service\";\nimport * as i2 from \"src/app/main/services/data.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\n\nfunction ResultManagementComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2, \"Aucune r\\u00E9sultats trouv\\u00E9 dans la base donn\\u00E9es !\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", 4);\n  }\n}\n\nfunction ResultManagementComponent_tr_22_th_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const rs_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(rs_r10.roleName);\n  }\n}\n\nfunction ResultManagementComponent_tr_22_td_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const rs_r11 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"+\", rs_r11.score, \"\");\n  }\n}\n\nfunction ResultManagementComponent_tr_22_td_10_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const rs_r11 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(rs_r11.score);\n  }\n}\n\nfunction ResultManagementComponent_tr_22_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtemplate(1, ResultManagementComponent_tr_22_td_10_div_1_Template, 2, 1, \"div\", 9);\n    i0.ɵɵtemplate(2, ResultManagementComponent_tr_22_td_10_div_2_Template, 2, 1, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const rs_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", rs_r11.score >= 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", rs_r11.score < 0);\n  }\n}\n\nfunction ResultManagementComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\")(6, \"table\", 24)(7, \"tr\");\n    i0.ɵɵtemplate(8, ResultManagementComponent_tr_22_th_8_Template, 2, 1, \"th\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"tr\");\n    i0.ɵɵtemplate(10, ResultManagementComponent_tr_22_td_10_Template, 3, 2, \"td\", 26);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const r_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    i0.ɵɵclassProp(\"bg-info\", i_r7 % 2 == 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(r_r6.contract == null ? null : r_r6.contract.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(r_r6.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", r_r6.roleScores);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"bg-light\", i_r7 % 2 == 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", r_r6.roleScores);\n  }\n}\n\nfunction ResultManagementComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1, \" Validation en cours... \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ResultManagementComponent_div_36_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Le nom est obligatoire.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ResultManagementComponent_div_36_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Le nom doit contenir au moins 2 caract\\u00E8res.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ResultManagementComponent_div_36_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Le nom doit comporter maximum 150 caract\\u00E8res.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ResultManagementComponent_div_36_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Le nom du r\\u00F4le existe d\\u00E9j\\u00E0.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ResultManagementComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtemplate(1, ResultManagementComponent_div_36_div_1_Template, 2, 0, \"div\", 9);\n    i0.ɵɵtemplate(2, ResultManagementComponent_div_36_div_2_Template, 2, 0, \"div\", 9);\n    i0.ɵɵtemplate(3, ResultManagementComponent_div_36_div_3_Template, 2, 0, \"div\", 9);\n    i0.ɵɵtemplate(4, ResultManagementComponent_div_36_div_4_Template, 2, 0, \"div\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.name == null ? null : ctx_r3.name.errors == null ? null : ctx_r3.name.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.name == null ? null : ctx_r3.name.errors == null ? null : ctx_r3.name.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.name == null ? null : ctx_r3.name.errors == null ? null : ctx_r3.name.errors[\"maxlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.name == null ? null : ctx_r3.name.errors == null ? null : ctx_r3.name.errors[\"uniquePlayerName\"]);\n  }\n}\n\nfunction ResultManagementComponent_option_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const c_r20 = ctx.$implicit;\n    i0.ɵɵpropertyInterpolate(\"value\", c_r20.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", c_r20.name, \" (\", c_r20.numberOfPlayers, \" joueurs)\");\n  }\n}\n\nfunction ResultManagementComponent_div_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"label\", 31);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 32);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const role_r21 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"for\", role_r21);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(role_r21);\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"id\", role_r21);\n    i0.ɵɵpropertyInterpolate(\"formControlName\", role_r21);\n  }\n}\n\nexport let ResultManagementComponent = /*#__PURE__*/(() => {\n  class ResultManagementComponent {\n    constructor(_navigationNotifierService, _dataService, _fb) {\n      this._navigationNotifierService = _navigationNotifierService;\n      this._dataService = _dataService;\n      this._fb = _fb;\n      this.oldContractValue = -1;\n      this.contracts = [];\n      this.roleScoresArray = [];\n      this.creationForm = this._fb.group({\n        name: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(150)], []],\n        contract: ['', [Validators.required]]\n      }, {\n        validators: [],\n        asyncValidators: []\n      });\n    }\n\n    get name() {\n      var _a;\n\n      return (_a = this.creationForm) === null || _a === void 0 ? void 0 : _a.get('name');\n    }\n\n    get contract() {\n      var _a;\n\n      return (_a = this.creationForm) === null || _a === void 0 ? void 0 : _a.get('contract');\n    }\n\n    get roleScores() {\n      return this.creationForm.get('roleScores');\n    }\n\n    ngOnInit() {\n      this._navigationNotifierService.announcePageChange('results');\n\n      this.results$ = this._dataService.findallResults();\n\n      this._dataService.findAllContracts().subscribe(data => {\n        this.contracts = data;\n      }, () => {\n        this.contracts = [];\n      });\n    }\n\n    onSubmit() {\n      var _a;\n\n      if (this.creationForm.valid) {\n        let result = {};\n        result.name = (_a = this.name) === null || _a === void 0 ? void 0 : _a.value;\n        result.roleScores = [];\n        this.contracts.forEach(ctr => {\n          var _a, _b;\n\n          if (((_a = this.contract) === null || _a === void 0 ? void 0 : _a.value) == ctr.id) {\n            result.contract = ctr;\n            result.numberOfPlayers = ctr.numberOfPlayers;\n            (_b = ctr.roles) === null || _b === void 0 ? void 0 : _b.forEach(role => {\n              var _a, _b;\n\n              let rs = {\n                roleName: role.name,\n                score: (_a = this.creationForm.get(role.name)) === null || _a === void 0 ? void 0 : _a.value\n              };\n              (_b = result.roleScores) === null || _b === void 0 ? void 0 : _b.push(rs);\n            });\n          }\n        });\n\n        this._dataService.createResult(result).subscribe(data => {\n          this.results$ = this._dataService.findallResults();\n          this.creationForm.reset();\n          this.oldContractValue = -1;\n          this.roleScoresArray = [];\n        });\n      }\n    }\n\n    onContractChange() {\n      var _a; // first remove old controls (if needed)\n\n\n      if (this.oldContractValue != -1) {\n        this.contracts.forEach(ctr => {\n          var _a;\n\n          if (this.oldContractValue == ctr.id) {\n            (_a = ctr.roles) === null || _a === void 0 ? void 0 : _a.forEach(role => {\n              this.creationForm.removeControl(role.name);\n            });\n          }\n        });\n      }\n\n      this.roleScoresArray = []; // Second add new controls\n\n      let contractId = (_a = this.contract) === null || _a === void 0 ? void 0 : _a.value;\n      this.contracts.forEach(ctr => {\n        var _a;\n\n        if (contractId == ctr.id) {\n          (_a = ctr.roles) === null || _a === void 0 ? void 0 : _a.forEach(role => {\n            this.creationForm.addControl(role.name, new FormControl('0'));\n            this.roleScoresArray.push(role.name);\n          });\n        }\n      });\n      this.oldContractValue = contractId;\n    }\n\n  }\n\n  ResultManagementComponent.ɵfac = function ResultManagementComponent_Factory(t) {\n    return new (t || ResultManagementComponent)(i0.ɵɵdirectiveInject(i1.NavigationNotifierService), i0.ɵɵdirectiveInject(i2.DataService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n\n  ResultManagementComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ResultManagementComponent,\n    selectors: [[\"wsw-result-management\"]],\n    decls: 47,\n    vars: 24,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col\"], [1, \"card\", \"text-white\", \"border-primary\"], [1, \"card-header\", \"bg-primary\"], [1, \"card-body\"], [1, \"card-text\"], [1, \"table\", \"table-bordered\", \"table-stripped\"], [1, \"bg-primary\", \"text-white\"], [4, \"ngIf\"], [3, \"bg-info\", 4, \"ngFor\", \"ngForOf\"], [1, \"card-body\", \"text-black\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"required\"], [\"for\", \"name\", 1, \"control-label\"], [\"id\", \"name\", \"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"text-warning\", 4, \"ngIf\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"contract\", 1, \"control-label\"], [\"id\", \"contract\", \"formControlName\", \"contract\", 1, \"form-select\", 3, \"change\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"form-group required\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-group\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"table\", \"table-bordered\"], [\"nowrap\", \"\", \"class\", \"bg-warning\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngFor\", \"ngForOf\"], [\"nowrap\", \"\", 1, \"bg-warning\"], [1, \"text-warning\"], [1, \"invalid-feedback\"], [3, \"value\"], [1, \"control-label\", 3, \"for\"], [\"type\", \"number\", 1, \"form-control\", 3, \"id\", \"formControlName\"]],\n    template: function ResultManagementComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h1\");\n        i0.ɵɵtext(4, \"Gestion des scores par contrats\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(5, \"div\", 1)(6, \"div\", 2)(7, \"div\", 3)(8, \"div\", 4);\n        i0.ɵɵtext(9, \"Liste des r\\u00E9sultats par contrat\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 5)(11, \"div\", 6)(12, \"table\", 7)(13, \"tr\", 8)(14, \"th\");\n        i0.ɵɵtext(15, \"Nom du l'annonce\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"th\");\n        i0.ɵɵtext(17, \"Nom du r\\u00E9sultat de la donne\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\");\n        i0.ɵɵtext(19, \"R\\u00F4les & scores des participants \\u00E0 la donne\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(20, ResultManagementComponent_tr_20_Template, 3, 1, \"tr\", 9);\n        i0.ɵɵpipe(21, \"async\");\n        i0.ɵɵtemplate(22, ResultManagementComponent_tr_22_Template, 11, 8, \"tr\", 10);\n        i0.ɵɵpipe(23, \"async\");\n        i0.ɵɵelementEnd()()()()();\n        i0.ɵɵelementStart(24, \"div\", 2)(25, \"div\", 3)(26, \"div\", 4);\n        i0.ɵɵtext(27, \"Cr\\u00E9ation d'un r\\u00E9sultat pour un contrat\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 11)(29, \"div\", 6)(30, \"form\", 12);\n        i0.ɵɵlistener(\"ngSubmit\", function ResultManagementComponent_Template_form_ngSubmit_30_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(31, \"div\", 13)(32, \"label\", 14);\n        i0.ɵɵtext(33, \"Nom du r\\u00E9sultat de la donne\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(34, \"input\", 15);\n        i0.ɵɵtemplate(35, ResultManagementComponent_div_35_Template, 2, 0, \"div\", 16);\n        i0.ɵɵtemplate(36, ResultManagementComponent_div_36_Template, 5, 4, \"div\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 13)(38, \"label\", 18);\n        i0.ɵɵtext(39, \"Nom de l'annonce de la donne\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"select\", 19);\n        i0.ɵɵlistener(\"change\", function ResultManagementComponent_Template_select_change_40_listener() {\n          return ctx.onContractChange();\n        });\n        i0.ɵɵtemplate(41, ResultManagementComponent_option_41_Template, 2, 3, \"option\", 20);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(42, ResultManagementComponent_div_42_Template, 4, 4, \"div\", 21);\n        i0.ɵɵelementStart(43, \"div\", 22)(44, \"fieldset\")(45, \"button\", 23);\n        i0.ɵɵtext(46, \"Enregistrer\");\n        i0.ɵɵelementEnd()()()()()()()()()();\n      }\n\n      if (rf & 2) {\n        let tmp_0_0;\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"ngIf\", ((tmp_0_0 = i0.ɵɵpipeBind1(21, 20, ctx.results$)) == null ? null : tmp_0_0.length) == 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(23, 22, ctx.results$));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.creationForm);\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"has-danger\", (ctx.name == null ? null : ctx.name.invalid) && ((ctx.name == null ? null : ctx.name.dirty) || (ctx.name == null ? null : ctx.name.touched)));\n        i0.ɵɵadvance(3);\n        i0.ɵɵclassProp(\"is-invalid\", (ctx.name == null ? null : ctx.name.invalid) && ((ctx.name == null ? null : ctx.name.dirty) || (ctx.name == null ? null : ctx.name.touched)))(\"is-valid\", (ctx.name == null ? null : ctx.name.valid) && ((ctx.name == null ? null : ctx.name.dirty) || (ctx.name == null ? null : ctx.name.touched)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ((ctx.name == null ? null : ctx.name.dirty) || (ctx.name == null ? null : ctx.name.touched)) && (ctx.name == null ? null : ctx.name.status) === \"PENDING\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.name == null ? null : ctx.name.invalid) && ((ctx.name == null ? null : ctx.name.dirty) || (ctx.name == null ? null : ctx.name.touched)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵclassProp(\"has-danger\", (ctx.contract == null ? null : ctx.contract.invalid) && ((ctx.contract == null ? null : ctx.contract.dirty) || (ctx.contract == null ? null : ctx.contract.touched)));\n        i0.ɵɵadvance(3);\n        i0.ɵɵclassProp(\"is-invalid\", (ctx.contract == null ? null : ctx.contract.invalid) && ((ctx.contract == null ? null : ctx.contract.dirty) || (ctx.contract == null ? null : ctx.contract.touched)))(\"is-valid\", (ctx.contract == null ? null : ctx.contract.valid) && ((ctx.contract == null ? null : ctx.contract.dirty) || (ctx.contract == null ? null : ctx.contract.touched)));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.contracts);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.roleScoresArray);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !(ctx.creationForm == null ? null : ctx.creationForm.valid));\n      }\n    },\n    directives: [i4.NgIf, i4.NgForOf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.SelectControlValueAccessor, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.NumberValueAccessor],\n    pipes: [i4.AsyncPipe],\n    styles: [\"\"]\n  });\n  return ResultManagementComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
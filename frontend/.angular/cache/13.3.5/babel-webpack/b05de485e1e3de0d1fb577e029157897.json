{"ast":null,"code":"import { catchError, map, of } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/main/services/data.service\";\nexport let UniqueContractByNameAndNumberOfPlayersValidator = /*#__PURE__*/(() => {\n  class UniqueContractByNameAndNumberOfPlayersValidator {\n    constructor(_dataService) {\n      this._dataService = _dataService;\n    }\n\n    validate(group) {\n      let numberOfPlayersControl = group.get('numberOfPlayers');\n      let nameControl = group.get('name');\n      return this._dataService.contractExistsByNameAndNumberOfPlayers(nameControl === null || nameControl === void 0 ? void 0 : nameControl.value, numberOfPlayersControl === null || numberOfPlayersControl === void 0 ? void 0 : numberOfPlayersControl.value).pipe(map(contractExists => contractExists ? {\n        uniqueContract: true\n      } : null), catchError(() => of(null)));\n    }\n\n  }\n\n  UniqueContractByNameAndNumberOfPlayersValidator.ɵfac = function UniqueContractByNameAndNumberOfPlayersValidator_Factory(t) {\n    return new (t || UniqueContractByNameAndNumberOfPlayersValidator)(i0.ɵɵinject(i1.DataService));\n  };\n\n  UniqueContractByNameAndNumberOfPlayersValidator.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UniqueContractByNameAndNumberOfPlayersValidator,\n    factory: UniqueContractByNameAndNumberOfPlayersValidator.ɵfac,\n    providedIn: 'root'\n  });\n  return UniqueContractByNameAndNumberOfPlayersValidator;\n})();","map":null,"metadata":{},"sourceType":"module"}